@using ModelUNRegister.Models
@model AnswersViewModel

@{
    ViewBag.Title = "回答问题";
}

<h2>回答问题</h2>

@if (!Model.IsFullyAnswered)
{
    <div class="alert alert-info alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> 请填写所有报名问题。
    </div>
}

<div class="row">
    <div class="col-md-8">
        <section id="answerFormSection">
            @using (Html.BeginForm())
            {
                for (int i = 0; i < Model.Answers.Count; i++)
                {
                    <div class="col-md-10 col-md-offset-2">
                        <h3>@Html.DisplayFor(m => m.Answers[i].Question.Title)</h3>
                        <p>@Html.DisplayFor(m => m.Answers[i].Question.Description)</p>
                    </div>

                    @Html.HiddenFor(m => m.Answers[i].Question.Id)

                    @*if (Model.Answers[i].AnswerId.HasValue)
                    {
                        @Html.HiddenFor(m => m.Answers[i].AnswerId)
                    }*@

                    <div class="form-group">
                        @Html.LabelFor(m => m.Answers[i].AnswerContent, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(m => m.Answers[i].AnswerContent, new { @class = "form-control", rows = "8", placeholder = "请在此处填写回答" })
                            @Html.ValidationMessageFor(m => m.Answers[i].AnswerContent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <input type="submit" value="提交" class="btn btn-primary btn-raised" />
            }
        </section>


    </div>
</div>